services:
  api:
    container_name: amui-api
    build:
      args:
        - DJANGO_HOST=${DJANGO_HOST}
      context: ./services/api
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./services/api:/home/api

      # Links bundle to templates folder.
      - static:/home/api/static

      - media:/home/api/media
    # ports:
    #   - 8000:8000
    tty: true
    depends_on:
      - sql
    command: bash ./entrypoint.sh
    networks:
      - apinet

  flow3d:
    container_name: amui-flow3d
    environment:
      - QT_QPA_PLATFORM=minimal
    build:
      context: ./services/flow3d
      dockerfile: Dockerfile
      args:
        - DEVELOPMENT=${DEVELOPMENT}
        - FLOW_3D_LICENSE_SERVER=${FLOW_3D_LICENSE_SERVER}
        - REDHAT_USERNAME=${REDHAT_USERNAME}
        - REDHAT_PASSWORD=${REDHAT_PASSWORD}

    # Prevents container from immediately exiting
    tty: true

    volumes:
      # Persist changes and output files
      - ./services/flow3d:/home/flow3d-docker

      - flow3d_venv:/home/flow3d-docker/venv

  web:
    container_name: amui-web
    build:
      context: ./services/web
      dockerfile: Dockerfile
    environment:
      # Selectively expose specific environment variables
      - API_DOMAIN=${API_DOMAIN}
      - AUTH0_API_IDENTIFIER=${AUTH0_API_IDENTIFIER}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}

      # https://stackoverflow.com/a/65265986/10521456
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./services/web:/home/web

      # Creates a separate volume for node_modules otherwise next.js won't start
      - web_node_modules:/home/web/node_modules

      # Links bundle from build output to api server.
      - static:/home/web/dist
    tty: true
    ports:
      - 3000:3000
  
  sql:
    container_name: amui-sql
    image: postgres:13
    volumes:
      - sql_data:/var/lib/postgres/data/
    env_file:
      - .env
    # ports:
    #   - 5432:5432
    networks:
      - apinet

  pgadmin:
    container_name: amui-pgadmin
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - 5050:5050
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - sql
    networks:
      - apinet

  nginx:
    build:
      args:
        - DJANGO_HOST=${DJANGO_HOST}
      context: ./services/nginx
    container_name: amui-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks:
      - apinet
    volumes:
      - static:/home/api/static
      - media:/home/api/media
    restart: always

volumes:
  static:
  media:
  pgadmin:
  sql_data:
  web_node_modules:
  flow3d_venv:

networks:
  apinet:
    driver: bridge    
