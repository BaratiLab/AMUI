worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Set the maximum allowed size for file uploads (increase as needed)
    client_max_body_size 100M;

    # Upstream to Django app (Gunicorn)
    upstream django {
        server amui-api:8000;  # Ensure this matches the service name of your Django app in Docker Compose
    }

    # HTTP Server Block
    server {
        listen 80;
        server_name ${DJANGO_HOST};  # Use your actual host or IP address

        # Serve static files directly
        location /static/ {
            alias /home/api/static/;  # Path to the collected static files
            expires 30d;
            access_log off;
        }

        # Serve media files if using media uploads
        location /media/ {
            alias /home/api/media/;  # Path for media files (if used)
            expires 30d;
            access_log off;
        }

        # Proxy other requests to the Django app (Gunicorn)
        location / {
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS Server Block (Optional, only if you are using SSL with self-signed certificates)
    server {
        listen 443 ssl;
        server_name ${DJANGO_HOST};

        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

        location /static/ {
            alias /home/api/static/;  # Path to the collected static files
            expires 30d;
            access_log off;
        }

        location /media/ {
            alias /home/api/media/;  # Path for media files (if used)
            expires 30d;
            access_log off;
        }

        location / {
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
